1. 모델링의 이해
 1) 모델링의 정의
    - 모델은 모형, 축소형의 의미로서 사람이 살아가면서 나타날 수 있는 다양한 현상에 대해 일정한 표기법으로 표현해 놓은 모형
    - 모델링은 모델을 표기법에 의해 규칙을 가지고 표기하는 것을 의미 ( 현실을 추상화, 단순화, 명확화하여 모델을 만드는 것 )
 2) 모델링의 특징 ( 추상화, 단순화, 명확화 ) 
    - 추상화(모형화) : 현실세계를 일정한 양식에 맞추워 표현
    - 단순화 : 복잡한 현실세계를 규약에 의해 제한된 표기법이나 언어로 표현하여 쉽게 이해하도록 하는 개념
    - 명확화 : 대상에 대한 애매모호함을 제거하고, 정확하게 현상을 기술하는 것
   → 모델링 : "현실세계를 추상화, 단순화, 명확하하기 위해 일정한 표기법에 의해 표현되는 표기법"
 3) 모델링의 3가지 관점 ( 데이터관점, 프로세스관점, 데이터와 프로세스의 상관관점)
    - 데이터 관점 : 업무가 어떤 데이터와 관련이 있는지, 데이터간의 관계는 무엇인지에 대해 모델링하는 방법 ( What, Data )
    - 프로세스 관점 : 업무가 실제하고 있는 일은 무엇인지, 무엇을 해야 하는지를 모델링하는 방법 ( How, Process )
    - 데이터와 프로세스의 상관관점 : 업무가 처리하는 일의 방법에 따라 데이터가 어떻게 영향 받는지 모델링 하는 방법 ( Interaction)

2. 데이터 모델의 기본 개념의 이해
 1) 데이터 모델링의 정의
    - 데이터 모델링은 정보시스템을 구축하기 위한 데이터관점의 업무 분석 기법
    - 현실세계의 데이터( What )에 대해 약속된 표기법에 의해 표현하는 과정
    - 데이터베이스를 구축하기 위한 분석/설계의 과정
 2) 데이터 모델이 제공하는 기능
    - 시스템을 현재 또는 원하는 모습으로 가시화하도록 도와줌.
    - 시스템의 구조와 행동을 명세화
    - 시스템을 구축하는 구조화된 틀을 제공
    - 시스템을 구축하는 과정에서 결정한 것을 문서화
    - 다양한 영역에 집중하기 위해 다른 영역의 세부 사항은 숨기는 다양한 관점 제공
    - 특정 목표에 따라 구체화된 상세 수준의 표현방법 제공
 3) 데이터 모델링의 중요성 및 유의점
    - 파급효과(Leverage) : 수 많은 단위 테스트들이 수행되고, 전체를 묶어서 병행테스트, 통합테스트를 수행함
    - 복잡한 정보 요구사항의 간결한 표현 (Conciseness) : 데이터 모델은 시스템의 정보 요구사항과 한계를 가장 명확하고 간결하게 표현할 수 있는 도구 ( 설계 도면에 해당 )
    - 데이터 품질 (Data Quality) : 데이터 구조의 문제 때문에 데이터가 쌓이고 나서 문제점이 야기됨(Ex. 중복 데이터의 미정의, 데이터 구조의 비지니스 정의의 불충분, 동일한 성격의 데이터 통합하지 않고 분리)
    - 유의점 : 1. 중복(Duplication) 2. 비유연성(Inflexibility) 3. 비일관성(Inconsistency)
 4) 데이터 모델링의 3단계 진행 (http://www.dbguide.net/publishing/img/knowledge/SQL_004.jpg)
    - 개념적 데이터 모델링 : 현실세계 -> 개념적 구조 , 추상화 수준이 높고 업무중싱적이며 포괄적인 수준의 모델링 진행, 데이터 모델링 과정이 전 조직에 걸쳐 이루어지면 "전사적 데이터 모델링" (Enterprise Data Model) 
                                          핵심 엔터티와 그들 간의 관계 발견, 엔터티-관계 다이아그램 생성
                                          기능 1) 사용자와 시스템 개발자가 데이터 요구 사항을 발견 ( 상위의 문제애 대해 구조화를 쉽게 하고, 시스템 기능에 대해 논의 할 수 있는 기반 형성 )
                                          기능 2) 현 시스템이 어떻게 변형되어야 하는가를 이해하는데 유횽
    - 논리적 데이터 모델링 : 시스템으로 구축하고자 하는 업무에 대해 Key, 속성, 관계 등을 정확하게 표현, 재사용성이 높아짐
                                          물리적인 스키마 설계를 하기 전 단계의 "데이터 모델" 상태를 의미
                                          어떻게 데이터에 액세스하고, 누가 데이터에 액세스하며, 데이터에 존재하는 사실들을 인식하여 기록하는 것을 의미
                                          정규화과정이 이 부분에 속함. 정규화 과정을 통해서 중복 제거 및 속성들이 가장 적절한 엔터티에 배치되도록 하여 신뢰성 향상에 도움
    - 물리적 데이터 모델링 : 실제 DB에 이식할 수 있도록 성능, 저장 등 물리적인 성격을 고려하며 설계
                                          데이터가 물리적으로 컴퓨터에 어떻게 저장될 것인가에 대해 정의 (물리적 스키마)
 5) 프로젝트 생명주기(Life Cycle)에서 데이터 모델링 (http://www.dbguide.net/publishing/img/knowledge/SQL_006.jpg)
 6) 데이터 모델링에서 데이터독립성의 이해
    - 데이터독립성의 필요성 : 지속적으로 증가하는 유지보수 비용을 절감하고 데이터 복잡도를 낮추며 중복된 데이터를 줄이기 위한 목적
                                            끊임없는 요구사항에 대해 데이터베이스 간의 서로 독립성을 유지시키려는 목적
    - 데이터베이스 3단계 구조(ANSI/SPARC)(http://www.dbguide.net/publishing/img/knowledge/SQL_008.jpg)
                      : 외부단계(외부스키마, External Schema)
                         - 사용자와 가까운 단계로 사용자 개개인이 보는 자료에 대한 부분 ( 사용자가 처리하고자 하는 데이터유형에 따라, 관점에 따라, 방법에 따라 다른 스키마 구조를 가지고 있음)
                         - 개개 사용자 단계로서 사용자가 보는 개인적 DB 스키마 ( 개개 사용자나 응용프로그래머가 접근하는 DB 정의 )
                                             개념단계(개념스키마, Conceptual Schema)
                         - 사용자가 처리하는 데이터 유형의 공통적인 사항을 처리하는 통합된 뷰를 스키마 구조로 디자인한 형태
                         - 하나의 개념적 스키마로 구성하는 모든 사용자 관점을 통합한 조직 전체의 DB를 기술하는 것
                         - DB에 저장되는 데이터와 그들간의 관계를 표현하는 스키마
                                            내부적단계(내부스키마, Internal Schema)
                         - 데이터가 물리적으로 저장된 방법에 대한 스키마 구조를 의미
                         - DB가 물리적으로 저장된 형식
    - 두 영역의 데이터 독립성 : 논리적 독립성 ( 외부스키마 - 개념스키마 )
                         - 개념 스키마가 변경되어도 외부 스키마에는 영향을 미치지 않도록 지원
                         - 논리적 구조 변경되어도 응용 프로그램에는 영향을 끼치지 않음
                         - 사용자 특성에 맞게 변경이 가능함
                                              물리적 독립성 ( 개념스키마 - 내부스키마 )
                         - 내부스키마가 변경되어도 외부/개념 스키마에는 영향을 받지 않도록 지원
                         - 저장장치의 구조변경은 응용프로그램과 개념스키마에 영향이 없음
                         - 물리적 구조 영향 없이 개념구조 변경 가능
    - 사상(Mapping) : 외부적/개념적 사상 ( 논리적 사상 )
                     - 외부적 뷰와 개념적 뷰의 상호 관련성을 의미
                     - Ex. 사용자가 접근하는 형식에 따라 다른 타입의 필드를 가질 수 있지만, 개념적 뷰의 필드 타입은 변화가 없다
                                       개념적/내부적 사상 ( 물리적 사상 )
                     - 개념적 뷰와 저장된 DB의 상호 관련성을 의미
                     - Ex. 저장된 DB구조가 바뀌면 개념적/내부적 사상이 바뀌어야지만 개념적 스키마가 그대로 남아있음
 7) 데이터 모델링의 중요한 세 가지 개념
    - 데이터 모델링의 세 가지 요소 : 1) 업무가 관여하는 어떤 것 (Things) → 엔터티 
                            2) 어떤 것이 가지는 성격 (Attributes) → 속성 
                            3) 업무가 관여하는 어떤 것 간의 관계 (Relationships) → 관계
    - 단수와 집합(복수)의 명명 (http://www.dbguide.net/publishing/img/knowledge/SQL_013.jpg)
 8) 데이터 모델의 표기법인 ERD의 이해
    - 데이터 모델 표기법 (http://www.dbguide.net/publishing/img/knowledge/SQL_016.jpg)
    - ERD 작업 순서 : 엔터티 그리기 → 엔터티 배치 → 엔터티간의 관계 설정 → 관계명을 기술 → 관계의 참여도 기술 → 관계의 필수여부 기술
 9) 좋은 데이터 모델의 요소
    - 완전성(Completeness) : 모든 데이터가 데이터 모델에 정의되어 있어야 한다
    - 중복배제(Non-Redundancy) : 하나의 DB에 동일한 사실은 반드시 한 번만 기록되어야 한다. (Ex. 나이 컬럼과 생년월일 컬럼이 존재하면 데이터 중복 )
    - 업무규칙(Business Rules) : 데이터 모델링 과정에서 도출되고 규명되는 규칙을 데이터 모델에 표현 및 공유
    - 데이터 재사용(Data Reusability) : 통합 모델이 되어야만 데이터 재사용성 향상 ( 데이터가 어플리케이션에 대해 독립적으로 설계되어야 한다 )
    - 의사소통(Communication) : 데이터 분석 과정에서 자연스럽게 많은 업무 규칙들이 도출되고, 동일한 의미로 받아들이고 정보시스템을 활용할 수 있는 역할을 함
    - 통합성(Integration) : 가장 바람직한 데이터 구조의 형태는 동일한 데이터는 조직의 전체에서 한 번만 정의되고 다른 영역에서는 참조, 활용해야함