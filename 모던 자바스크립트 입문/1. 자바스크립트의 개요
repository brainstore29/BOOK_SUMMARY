- 컴파일 언어와 인터프리터 언어
	1) 컴파일 언어
	    ㆍ 컴파일(Compile) : 소스 코드를 실행하기에 앞서 기계어로 번역하는 행위
	    ㆍ 컴파일러(Compiler) : 컴파일을 수행하는 소프트웨어
	    ㆍ 컴파일 언어(Compile Language) : 소스 코드 여러 개를 하나로 묶어서 컴파일 한 후 실행하는 프로그래밍 언어 ( Ex. C, C++, Java, Objective C ) 
 	    ㆍ 컴파일하는 데 시간 소요가 있지만, 실행되는 속도는 빠르다는 장점
	2) 인트프리터 언어
	    ㆍ 프로그램을 한 줄마다 기계어로 번역해서 실행하는 프로그래밍 언어 ( Ex. JavaScript, LISP, Perl, Ruby, Python)
	    ㆍ 인터프리터(Interpreter) : 프로그램을 한 줄씩 번역해서 실행시키는 소프트웨어
	    ㆍ 프로그램을 바로 실행 할 수 있고, 동작을 확인해 가면서 프로그램을 개발 할 수 있는 장점
	    ㆍ 프로그램 코드를 한 줄씩 기계어로 번역하면서 실행하기 때문에 컴파일 언어보다 처리 속도가 느림

- 프로그래밍 언어의 유형
	1) 절차적 언어 : 절차를 순서대로 작성해 나가는 언어
	2) 객체 지향 언어 : 처리와 관련된 데이터와 절차를 하나로 묶어 객체 단위로 관리하는 언어
	3) 함수형 언어 : 프로그램을 함수를 조합하여 구현해 나가는 언어
	4) 논리형 언어 : 데이터 사이의 관계와 논리를 설명해 나가는 언어
	
- 자바스크립트의 특징
	1) 인터프리터 언어 : 웹 브라우저 대부분 JIT 컴파일러(Just In Time Compiler) 내장되어 실행시간에 자바스크립트 코드를 컴파일해 실행 속도가 매우 빨라짐
	2) 동적 프로토타입 기반 객체 지향 언어 
	      ㆍC++, Java는 클래스를 이용하여 객체를 생성하는 클래스 기반 객체 지향 언어
	      ㆍ자바스크립트는 프로토타입을 상속하는 프로토타입 기반 객체 지향 언어, 객체 생성 후 프로퍼티 및 메서드 동적 추가 삭제 가능 (클래스 기반 객체 지향 언어와 다른 점임)
	3) 동적 타입 언어
	      ㆍC++, Java는 실행되기 전 변수 타입이 결정되는 정적 타입 언어
	      ㆍ자바스크립트는 변수 타입이 존재하지 않고, 실행하는 도중 변수에 저장되는 데이터 타입이 동적으로 변환 가능
	4) 함수가 일급 객체 (First class object)
	     ㆍ 자바스크립트의 함수는 객체, 함수의 인자로 함수를 넘길 수 있음. 이로 인해 고차 함수 구현 가능
	5) 함수가 클로저(closure)를 정의
	     ㆍ 클로저란? 내부함수가 외부함수의 맥락(context)에 접근할 수 있는 것을 의미 ( 참고 : https://opentutorials.org/course/743/6544 ) 
	     ㆍ 클로저로 변수를 은닉하거나 영속성을 보장